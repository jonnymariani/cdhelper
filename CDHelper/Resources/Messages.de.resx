<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoSearchDisabled" xml:space="preserve">
    <value>Automatische Suche deaktiviert</value>
  </data>
  <data name="AutoSearchEnabled" xml:space="preserve">
    <value>Automatische Suche aktiviert</value>
  </data>
  <data name="CDsFound" xml:space="preserve">
    <value>{0} CDs gefunden!</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Wechselt die Sprache der Erweiterung</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>Befehl</value>
  </data>
  <data name="CommandList" xml:space="preserve">
    <value>Befehlsliste</value>
  </data>
  <data name="ExampleUsage" xml:space="preserve">
    <value>Beispielverwendung</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exportiert deine Sammlung in eine .txt-Datei</value>
  </data>
  <data name="ExportAll" xml:space="preserve">
    <value>Exportiert aus allen oben genannten Optionen</value>
  </data>
  <data name="ExportingToFile" xml:space="preserve">
    <value>Exportieren in Datei</value>
  </data>
  <data name="ExportInv" xml:space="preserve">
    <value>Exportiert nur aus dem Inventar</value>
  </data>
  <data name="ExportJuke" xml:space="preserve">
    <value>Exportiert nur aus dem Jukebox</value>
  </data>
  <data name="ExportRoom" xml:space="preserve">
    <value>Exportiert nur aus dem Raum</value>
  </data>
  <data name="ExtensionDescription" xml:space="preserve">
    <value>CD Helper ist eine Erweiterung, die Ihnen hilft, CDs in Habbo einfacher zu verwalten und zu entdecken</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Informationen</value>
  </data>
  <data name="LanguageChangedTo" xml:space="preserve">
    <value>Sprache geändert zu</value>
  </data>
  <data name="LoadedSuccessfully" xml:space="preserve">
    <value>CD Helper erfolgreich geladen</value>
  </data>
  <data name="NoCDsFound" xml:space="preserve">
    <value>Keine CDs gefunden</value>
  </data>
  <data name="OfferBy" xml:space="preserve">
    <value>{0}\nAngebot von {1}</value>
  </data>
  <data name="OpensThisScreen" xml:space="preserve">
    <value>Äh... nun... öffnet diesen Bildschirm. Was haben Sie erwartet?</value>
  </data>
  <data name="RetrievesListOfCDs" xml:space="preserve">
    <value>Ruft die Liste der CDs aus der Jukebox des Raums ab</value>
  </data>
  <data name="RetrievesNameMarketplace" xml:space="preserve">
    <value>Ruft den Namen der aktuellen CD vom Marktplatz ab</value>
  </data>
  <data name="RoomNotBeingTracked" xml:space="preserve">
    <value>Der Raumstatus wird nicht verfolgt. Bitte betreten Sie den Raum erneut und versuchen Sie es erneut</value>
  </data>
  <data name="SuccessfullyExportedCDs" xml:space="preserve">
    <value>{0} CDs erfolgreich exportiert</value>
  </data>
  <data name="SupportedLanguages" xml:space="preserve">
    <value>Unterstützte Sprachen</value>
  </data>
  <data name="ToUseCommands" xml:space="preserve">
    <value>Um Befehle zu verwenden, geben Sie sie wie folgt in den Chat ein</value>
  </data>
  <data name="UnableLoadInventory" xml:space="preserve">
    <value>Inventardaten konnten nicht geladen werden</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unbekannter Befehl:\n{0}\nVersuchen Sie:\n{1}</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Verwendung</value>
  </data>
</root>